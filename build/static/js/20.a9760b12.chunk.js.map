{"version":3,"sources":["components/Layout.js","pages/NotFound.js","pages/OfferType.js"],"names":["cdark","css","_templateObject","cnophone","_templateObject2","Section","styled","_ref","dark","nophone","className","p","Object","_ldata_my_projects_chomok_client_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","cx","_ldata_my_projects_chomok_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_templateObject3","button","_templateObject4","_templateObject5","Wrapper","Box","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default","style","offerType","OfferType","state","types","dict","perc","special","bulk","showOldCode","data","fetch","_id","code","type","then","r","status","Error","json","res","ok","console","error","_this","showData","catch","Modal","info","title","content","react__WEBPACK_IMPORTED_MODULE_6___default","qrcode_react__WEBPACK_IMPORTED_MODULE_8___default","value","offertype","_this$props","this","props","zone","length","_components_Layout__WEBPACK_IMPORTED_MODULE_13__","map","idx","_reach_router__WEBPACK_IMPORTED_MODULE_10__","to","concat","key","caption","toUpperCase","_NotFound__WEBPACK_IMPORTED_MODULE_12__","_this2","reply","setState","offers","keys","filter","el","React","PureComponent"],"mappings":"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","file":"static/js/20.a9760b12.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css, cx } from 'react-emotion'\n\nexport const cdark = css`\n  background: rgba(0, 0, 0, 0.45);\n  color: #fff;\n  h1, h2, h3, h4, h5 {\n    color: #fefefe;\n  }\n`\n\nexport const cnophone = css`\n  @media (max-width: 640px) {\n    flex-basis: 100%;\n    display: none;\n  }\n`\n\nconst Sec = ({ dark, nophone, className, ...p }) => (\n  <section\n    className={cx(className, { [cdark]: dark }, { [cnophone]: nophone })}\n    {...p}\n  />\n)\n\nSec.propTypes = {\n  dark: PropTypes.bool,\n  nophone: PropTypes.bool,\n  className: PropTypes.string\n}\n\nexport const Section = styled(Sec)`\n  flex-basis: 50%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  transition: all 300ms ease;\n  @media (max-width: 640px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Button = styled('button')`\n  text-transform: uppercase;\n  font-family: Montserrat, sans-serif;\n  padding: 10px;\n  border: solid 2px #fff;\n  color: #fff;\n  cursor: pointer;\n  outline: none;\n  transition: all 250ms ease;\n  background-color: transparent;\n  background-size: 100% 200%;\n  background-image: linear-gradient(to bottom, transparent 50%, white 50%);\n\n  &:hover {\n    color: #333;\n    background-position: 0 -100%;\n  }\n`\n\nexport const button = css`\n  text-transform: uppercase;\n  font-family: Montserrat, sans-serif;\n  padding: 10px;\n  border: solid 2px #fff;\n  color: #fff;\n  cursor: pointer;\n  outline: none;\n  transition: all 250ms ease;\n  background-color: transparent;\n  background-size: 100% 200%;\n  background-image: linear-gradient(to bottom, transparent 50%, white 50%);\n\n  &:hover {\n    color: #333;\n    background-position: 0 -100%;\n  }\n`\n","import React from 'react'\nimport styled from 'react-emotion'\n\nexport const Wrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Box = styled('div')`\n  background-color: rgba(255, 255, 255, 0.85);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.85);\n  border-radius: 5px;\n  padding: 20px;\n  width: 50%;\n  max-width: 480px;\n\n  h1 {\n    font-weight: 900;\n  }\n  h2 {\n    font-weight: 400;\n    text-transform: uppercase;\n  }\n`\n\nexport default p => (\n  <Wrapper style={p.style}>\n    <Box>\n      <h1>404</h1>\n      <h2>Page not found!</h2>\n    </Box>\n  </Wrapper>\n)\n","import React from 'react'\nimport { Modal } from 'antd'\nimport QrCode from 'qrcode.react'\nimport PropTypes from 'prop-types'\nimport { css } from 'react-emotion'\nimport { Link } from '@reach/router'\nimport { map, filter, keys } from 'ramda'\n\nimport { Wrapper, Box } from './NotFound'\nimport { Section, button } from '../components/Layout'\n\nconst offerType = css`\n  flex-basis: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  h1,\n  h2,\n  h3 {\n    color: #fff;\n  }\n`\n\nclass OfferType extends React.PureComponent {\n  state = {\n    types: []\n  }\n\n  dict = {\n    perc: 'Percentage Off',\n    special: 'Special Offer',\n    bulk: 'Bulk Discount'\n  }\n\n  render () {\n    const { style, zone } = this.props\n    return this.state.types.length > 0 ? (\n      <Section style={style} className={offerType}>\n        <h1>Select an offer type</h1>\n        {this.state.types.map((type, idx) => (\n          <Link className={button} to={`/offer/${zone}/${type.key}`} key={idx}>\n            {type.caption.toUpperCase()}\n          </Link>\n        ))}\n      </Section>\n    ) : (\n      <Wrapper style={style}>\n        <Box>\n          <h1>No offer found!</h1>\n        </Box>\n      </Wrapper>\n    )\n  }\n\n  componentDidMount () {\n    fetch('/api/offers/dhaka/' + this.props.zone)\n      .then(r => r.json())\n      .then(reply => {\n        if (!reply.ok) return this.setState({ types: [] })\n        if (reply.data.code) return this.showOldCode(reply.data)\n        const { offers } = reply.data\n        const types = keys(filter(el => el, offers))\n        this.setState({\n          types: map(el => ({ key: el, caption: this.dict[el] }), types)\n        })\n      })\n  }\n\n  showOldCode = data => {\n    fetch('/api/codes/' + data._id + '/' + data.code.type)\n      .then(r => {\n        if (r.status === 401) throw new Error('Unauthorized')\n        return r.json()\n      })\n      .then(res => {\n        if (!res.ok) return console.error('Something went wrong')\n        this.showData(res.data)\n      })\n      .catch(console.error)\n  }\n\n  showData = data =>\n    Modal.info({\n      title: 'You already got a code!',\n      content: (\n        <div>\n          <QrCode value={'chomok://' + data.code} />\n          <pre>{data.code}</pre>\n          <h3>Type: {this.dict[data.offertype]}</h3>\n        </div>\n      )\n    })\n\n  static propTypes = {\n    style: PropTypes.object,\n    zone: PropTypes.string\n  }\n}\n\nexport default OfferType\n"],"sourceRoot":""}