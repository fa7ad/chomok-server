{"version":3,"sources":["pages/_admin/AddPartner.js"],"names":["FormItem","Form","Item","AddPartner","state","progress","handleSubmit","e","preventDefault","_this","setState","props","form","validateFieldsAndScroll","err","values","body","JSON","stringify","fetch","credentials","method","headers","Content-Type","then","r","status","navigate","json","rep","ok","catch","console","error","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_7__","onSubmit","rules","required","message","antd__WEBPACK_IMPORTED_MODULE_8__","placeholder","type","antd__WEBPACK_IMPORTED_MODULE_9__","htmlType","antd__WEBPACK_IMPORTED_MODULE_10__","PureComponent","ControlledAddPartner","create"],"mappings":"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","file":"static/js/13.0974803a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { navigate } from '@reach/router'\nimport React, { PureComponent } from 'react'\nimport { Form, Button, Input, Icon } from 'antd'\n\nconst FormItem = Form.Item\n\nclass AddPartner extends PureComponent {\n  state = {\n    progress: 'plus'\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.setState({ progress: 'loading' })\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (err) return this.setState({ progress: 'close' })\n      const body = JSON.stringify(values)\n      fetch('/api/register', {\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body\n      })\n        .then(r => {\n          if (r.status === 401) navigate('/login')\n          return r.json()\n        })\n        .then(rep => {\n          if (rep.ok) {\n            this.setState({ progress: 'check' })\n            navigate('/admin/partners')\n          } else throw rep\n        })\n        .catch(e => {\n          this.setState({ progress: 'close' })\n          console.error(e)\n        })\n    })\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator('name', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the partner's full name!\"\n              }\n            ]\n          })(<Input placeholder=\"Partner's full name (person, not business)\" />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('phone', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the partner's phone number!\"\n              }\n            ]\n          })(<Input placeholder=\"Partner's phone\" />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('username', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the partner's username!\"\n              }\n            ]\n          })(<Input placeholder=\"Partner's username\" />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the partner's password!\"\n              }\n            ]\n          })(<Input placeholder=\"Partner's password\" type='password' />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the partner's email!\"\n              }\n            ]\n          })(<Input placeholder=\"Partner's email\" type='email' />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('business.name', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the business's name!\"\n              }\n            ]\n          })(<Input placeholder=\"Business's name\" />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('business.address', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the business's address!\"\n              }\n            ]\n          })(<Input placeholder=\"Business's address\" />)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('business.phone', {\n            rules: [\n              {\n                required: true,\n                message: \"Please enter the business's phone number!\"\n              }\n            ]\n          })(<Input placeholder=\"Business's phone number\" />)}\n        </FormItem>\n        <FormItem>\n          <Button\n            type={this.state.progress === 'close' ? 'danger' : 'primary'}\n            htmlType='submit'>\n            <Icon type={this.state.progress} />\n          </Button>\n        </FormItem>\n      </Form>\n    )\n  }\n\n  static propTypes = {\n    form: PropTypes.object\n  }\n}\n\nconst ControlledAddPartner = Form.create()(AddPartner)\n\nexport default ControlledAddPartner\n"],"sourceRoot":""}