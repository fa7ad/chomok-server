{"version":3,"sources":["pages/_admin/AddOffer.js"],"names":["FormItem","Form","Item","Option","Select","tob64","file","Promise","resolve","reader","FileReader","addEventListener","e","result","readAsDataURL","AddOffer","state","zones","partners","progress","handleSubmit","preventDefault","_this","setState","props","form","validateFieldsAndScroll","err","values","image","then","JSON","stringify","Object","_ldata_my_projects_chomok_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","percentage","body","fetch","credentials","method","headers","Content-Type","r","json","rep","ok","Error","navigate","catch","console","error","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_7__","onSubmit","rules","required","message","react_images_upload__WEBPACK_IMPORTED_MODULE_12___default","withIcon","singleImage","buttonText","imgExtension","maxFileSize","antd__WEBPACK_IMPORTED_MODULE_8__","placeholder","antd__WEBPACK_IMPORTED_MODULE_9__","antd__WEBPACK_IMPORTED_MODULE_10__","type","htmlType","antd__WEBPACK_IMPORTED_MODULE_11__","_this2","status","res","data","map","it","key","_id","value","division","toUpperCase","name","business","React","PureComponent","OfferAdder","create"],"mappings":"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","file":"static/js/9.3f4c15db.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Select, Button, Input, Icon } from 'antd'\nimport ImageUploader from 'react-images-upload'\nimport { navigate } from '@reach/router'\n\nconst FormItem = Form.Item\nconst { Option } = Select\n\nconst tob64 = file =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n    reader.addEventListener('loadend', e => {\n      resolve(reader.result)\n    })\n    reader.readAsDataURL(file)\n  })\n\nclass AddOffer extends React.PureComponent {\n  state = {\n    zones: [],\n    partners: [],\n    progress: 'plus'\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.setState({ progress: 'loading' })\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        tob64(values.image[0])\n          .then(image =>\n            JSON.stringify({ ...values, percentage: +values.percentage, image })\n          )\n          .then(body =>\n            fetch('/api/offers', {\n              credentials: 'include',\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body\n            })\n          )\n          .then(r => r.json())\n          .then(rep => {\n            if (rep.ok) {\n              this.setState({ progress: 'check' })\n              navigate('/admin/offers')\n            } else throw new Error('Something wrong, again!')\n          })\n          .catch(e => console.error(e))\n      } else {\n        this.setState({ progress: 'close' })\n      }\n    })\n  }\n\n  render () {\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem>\n          {getFieldDecorator('image', {\n            rules: [{ required: true, message: 'Please upload an image!' }]\n          })(\n            <ImageUploader\n              withIcon\n              singleImage\n              buttonText='Choose image'\n              imgExtension={['.jpg', '.png']}\n              maxFileSize={2098000}\n            />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('zoneid', {\n            rules: [{ required: true, message: 'Please select a zone!' }]\n          })(<Select placeholder='Select a zone'>{this.state.zones}</Select>)}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('partnerid', {\n            rules: [{ required: true, message: 'Please select a partner!' }]\n          })(\n            <Select placeholder='Select a partner'>\n              {this.state.partners}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('percentage', {\n            rules: [{ required: true, message: 'Please enter a percentage!' }]\n          })(<Input />)}\n        </FormItem>\n        <FormItem>\n          <Button\n            type={this.state.progress === 'close' ? 'danger' : 'primary'}\n            htmlType='submit'>\n            <Icon type='plus' />\n          </Button>\n        </FormItem>\n      </Form>\n    )\n  }\n\n  componentDidMount () {\n    fetch('/api/zones', { credentials: 'include' })\n      .then(r => {\n        if (r.status === 401) navigate('/login')\n        return r.json()\n      })\n      .then(res => {\n        if (!res.ok) throw new Error('Something went wrong')\n        const zones = res.data.map(it => (\n          <Option key={it._id} value={it._id}>\n            {it.division.toUpperCase()} &gt; {it.name.toUpperCase()}\n          </Option>\n        ))\n        this.setState({ zones })\n      })\n      .catch(e => console.error(e))\n    fetch('/api/users/partner', { credentials: 'include' })\n      .then(r => {\n        if (r.status === 401) navigate('/login')\n        return r.json()\n      })\n      .then(res => {\n        if (!res.ok) throw new Error('Something went wrong')\n        const partners = res.data.map(it => (\n          <Option key={it._id} value={it._id}>\n            {it.name} / {it.business.name}\n          </Option>\n        ))\n        this.setState({ partners })\n      })\n      .catch(e => console.error(e))\n  }\n\n  static propTypes = {\n    form: PropTypes.object\n  }\n}\n\nconst OfferAdder = Form.create()(AddOffer)\n\nexport default OfferAdder\n"],"sourceRoot":""}