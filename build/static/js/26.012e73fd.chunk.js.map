{"version":3,"sources":["components/Layout.js","pages/OfferType.js","pages/NotFound.js"],"names":["cdark","css","_templateObject","cnophone","_templateObject2","Section","styled","_ref","dark","nophone","className","p","Object","_ldata_my_projects_chomok_client_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","cx","_ldata_my_projects_chomok_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_templateObject3","Page","_templateObject4","White","_templateObject5","Container","_templateObject6","btn","type","_templateObject7","ButtonLink","Link","Heading","_templateObject8","Content","_templateObject9","qrmodal","_templateObject10","offerType","OfferType","state","loading","qr","types","dict","perc","special","bulk","showOldCode","data","fetch","_id","code","then","r","status","Error","json","res","ok","console","error","_this","showData","catch","download","e","document","href","concat","Date","now","click","Modal","info","title","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","content","the_qr__WEBPACK_IMPORTED_MODULE_8__","text","onClick","onGenerate","saveQr","alt","offertype","onOk","navigate","setState","_this$props","this","props","style","zone","_this$state","_components_Loading__WEBPACK_IMPORTED_MODULE_13__","length","_components_Layout__WEBPACK_IMPORTED_MODULE_14__","map","idx","to","key","caption","_NotFound__WEBPACK_IMPORTED_MODULE_12__","_this2","reply","offers","keys","filter","el","React","PureComponent","Wrapper","Box","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"static/js/26.012e73fd.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from '@reach/router'\nimport styled, { css, cx } from 'react-emotion'\n\nexport const cdark = css`\n  background: rgba(0, 0, 0, 0.45);\n  color: #fff;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: #fefefe;\n  }\n`\n\nexport const cnophone = css`\n  @media (max-width: 639px) {\n    flex-basis: 100%;\n    display: none;\n  }\n`\n\nconst Sec = ({ dark, nophone, className, ...p }) => (\n  <section\n    className={cx(className, { [cdark]: dark }, { [cnophone]: nophone })}\n    {...p}\n  />\n)\n\nSec.propTypes = {\n  dark: PropTypes.bool,\n  nophone: PropTypes.bool,\n  className: PropTypes.string\n}\n\nexport const Section = styled(Sec)`\n  flex-basis: 50%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  transition: all 300ms ease;\n  @media (max-width: 639px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Page = styled('div')`\n  flex-basis: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 85px;\n`\n\nPage.White = styled(Page)`\n  background-color: #fff;\n  color: #111;\n`\n\nexport const Container = styled('main')`\n  width: 100%;\n  height: 100%;\n  max-width: 960px;\n  background: rgba(0, 0, 0, 0.25);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  @media screen and (min-width: 641px) {\n    margin-bottom: 85px;\n  }\n  &, h1, h2, h3, h4, h5 {\n    color: #fff;\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    input, textarea{\n      max-width: 900px;\n      width: calc(100% - 10px);\n      margin: 1em 0;\n    }\n    button:last-child {\n      margin: 1em 0;\n    }\n  }\n  form input, form textarea, form button {\n    border-radius: 0;\n    background: rgba(0, 0, 0, 0.5);\n    color: #fff;\n  }\n`\n\nconst btn = type => styled(type)`\n  text-transform: uppercase;\n  font-family: Montserrat, sans-serif;\n  padding: 10px;\n  border: solid 2px #fff;\n  color: #fff;\n  cursor: pointer;\n  outline: none;\n  transition: background-position 250ms ease, background-color 225ms 50ms ease;\n  background: transparent linear-gradient(to bottom, #fff 50%, transparent 50%)\n    0 100%/100% 200% no-repeat;\n  &:hover {\n    color: #333;\n    background-color: #fff;\n    background-position: 0 0;\n  }\n`\n\nexport const Button = btn('button')\nexport const ButtonLink = btn(Link)\n\nexport const Heading = styled('h1')`\n  font-family: 'Source Sans Pro', sans-serif;\n  font-size: 4em;\n  color: #fefefe;\n  text-transform: uppercase;\n`\n\nexport const Content = styled('div')`\n  width: 75%;\n  text-align: justify;\n  text-transform: uppercase;\n  font-family: Montserrat, sans-serif;\n  margin-bottom: 1.5em;\n\n  max-height: 50vh;\n  overflow: hidden;\n`\n\nexport const qrmodal = css`\n  .ant-modal-content {\n    background: rgba(0, 0, 0, 0.65);\n    text-align: center;\n    border-radius: 0;\n  }\n  .ant-modal-confirm-content,\n  .ant-modal-confirm-title,\n  h3,\n  pre,\n  span {\n    color: #fff;\n  }\n\n  .ant-modal-confirm-content pre {\n    background-color: #fff;\n    color: #111;\n    display: inline-flex;\n    padding: 2px;\n  }\n\n  .ant-modal-confirm-content .the-qr {\n    margin: 15px auto;\n  }\n\n  .ant-modal-confirm-title {\n    text-transform: uppercase;\n    font-size: 1.3em;\n  }\n\n  .ant-modal-confirm-body-wrapper {\n    border: 4px solid #fff;\n    padding: 20px;\n  }\n\n  .ant-modal-confirm-btns {\n    float: none;\n  }\n\n  .ant-modal-confirm-content {\n    margin-left: 0 !important;\n    text-align: center;\n\n    img {\n      width: 100%;\n    }\n  }\n\n  .ant-btn {\n    background: #fff;\n    border-radius: 0;\n    border: none;\n    padding: 0 40px;\n    &,\n    & span {\n      color: #111;\n    }\n  }\n\n  i.anticon {\n    margin-right: 0;\n    display: none;\n  }\n`\n","import React from 'react'\nimport { Modal } from 'antd'\nimport { TheQr } from 'the-qr'\nimport PropTypes from 'prop-types'\nimport { css } from 'react-emotion'\nimport { navigate } from '@reach/router'\nimport { map, filter, keys } from 'ramda'\n\nimport { Wrapper, Box } from './NotFound'\nimport Loading from '../components/Loading'\nimport { Section, ButtonLink, qrmodal } from '../components/Layout'\n\nconst offerType = css`\n  flex-basis: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  h1,\n  h2,\n  h3 {\n    color: #fff;\n  }\n`\n\nclass OfferType extends React.PureComponent {\n  state = {\n    loading: true,\n    qr: null,\n    types: []\n  }\n\n  dict = {\n    perc: 'Percentage Off',\n    special: 'Special Offer',\n    bulk: 'Bulk Discount'\n  }\n\n  render () {\n    const { style, zone } = this.props\n    const { types, loading } = this.state\n\n    if (loading) return <Loading />\n\n    return types.length > 0 ? (\n      <Section style={style} className={offerType}>\n        <h1>Select an offer type</h1>\n        {types.map((type, idx) => (\n          <ButtonLink to={`/offer/${zone}/${type.key}`} key={idx}>\n            {type.caption}\n          </ButtonLink>\n        ))}\n      </Section>\n    ) : (\n      <Wrapper style={style}>\n        <Box>\n          <h1>No offer found!</h1>\n        </Box>\n      </Wrapper>\n    )\n  }\n\n  componentDidMount () {\n    fetch('/api/offers/dhaka/' + this.props.zone)\n      .then(r => r.json())\n      .then(reply => {\n        if (!reply.ok) return this.setState({ types: [], loading: false })\n        if (reply.data.code) return this.showOldCode(reply.data)\n        const { offers } = reply.data\n        const types = keys(filter(el => el, offers))\n        this.setState({\n          loading: false,\n          types: map(el => ({ key: el, caption: this.dict[el] }), types)\n        })\n      })\n  }\n\n  showOldCode = data => {\n    fetch('/api/codes/' + data._id + '/' + data.code.type)\n      .then(r => {\n        if (r.status === 401) throw new Error('Unauthorized')\n        return r.json()\n      })\n      .then(res => {\n        if (!res.ok) return console.error('Something went wrong')\n        this.showData(res.data)\n      })\n      .catch(console.error)\n  }\n\n  download = e => {\n    const a = document.createElement('a')\n    a.href = this.state.qr\n    a.download = `qrcode-${Date.now()}.png`\n    a.click()\n  }\n\n  showData = data =>\n    Modal.info({\n      title: (\n        <>\n          <div>You have a saved</div>\n          <div>chomok code!</div>\n        </>\n      ),\n      className: qrmodal,\n      content: (\n        <>\n          <div>Please show this QR code to the restaurant.</div>\n          <TheQr\n            text={'chomok://' + data.code}\n            onClick={this.download}\n            onGenerate={this.saveQr}\n            alt={data.code}\n          />\n          <div>\n            <em>Click on the QR code to save for later</em>\n          </div>\n          <p>You can also show the following code</p>\n          <pre>{data.code}</pre>\n          <h3>Type: {this.dict[data.offertype]}</h3>\n        </>\n      ),\n      onOk () {\n        navigate('/')\n      }\n    })\n\n  saveQr = qr => this.setState({ qr })\n\n  static propTypes = {\n    style: PropTypes.object,\n    zone: PropTypes.string\n  }\n}\n\nexport default OfferType\n","import React from 'react'\nimport styled from 'react-emotion'\n\nexport const Wrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Box = styled('div')`\n  background-color: rgba(255, 255, 255, 0.85);\n  box-shadow: 0 0 5px rgba(255, 255, 255, 0.4);\n  padding: 20px;\n  width: 50%;\n  max-width: 480px;\n\n  h1 {\n    font-weight: 400;\n  }\n  h2 {\n    font-weight: 400;\n    text-transform: uppercase;\n  }\n`\n\nexport default p => (\n  <Wrapper style={p.style}>\n    <Box>\n      <h1>404</h1>\n      <h2>Page not found!</h2>\n    </Box>\n  </Wrapper>\n)\n"],"sourceRoot":""}