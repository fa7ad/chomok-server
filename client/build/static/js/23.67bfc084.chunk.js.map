{"version":3,"sources":["pages/_partner/Scan.js"],"names":["Container","styled","_templateObject","PartnerScan","state","delay","legacy","result","manual","qr","React","createRef","handleScan","code","startsWith","fetch","replace","method","credentials","then","r","status","navigate","Error","json","res","ok","_this","setState","data","catch","e","openImageDialog","current","handleError","manualInput","target","value","checkManual","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","this","JSON","stringify","antd__WEBPACK_IMPORTED_MODULE_8__","placeholder","onChange","antd__WEBPACK_IMPORTED_MODULE_9__","onClick","react_qr_reader__WEBPACK_IMPORTED_MODULE_10___default","ref","style","width","maxWidth","margin","onError","onScan","legacyMode","PureComponent"],"mappings":"meAMA,IAAMA,EAAYC,YAAO,MAAPA,CAAHC,KAcTC,6MACJC,MAAQ,CACNC,MAAO,IACPC,QAAQ,EACRC,QAAQ,EACRC,OAAQ,MAGVC,GAAKC,IAAMC,cAEXC,WAAa,SAAAC,GACPA,GAAQA,EAAKC,WAAW,aAC1BC,MAAM,cAAgBF,EAAKG,QAAQ,YAAa,IAAK,CACnDC,OAAQ,OACRC,YAAa,YAEZC,KAAK,SAAAC,GACJ,GAAiB,MAAbA,EAAEC,QAA+B,MAAbD,EAAEC,OAExB,MADAC,YAAS,UACH,IAAIC,MAAM,gBAElB,OAAOH,EAAEI,SAEVL,KAAK,SAAAM,GACJ,IAAIA,EAAIC,GAED,MAAM,IAAIH,MAAM,gBADrBI,EAAKC,SAAS,CAAErB,OAAQkB,EAAII,SAG/BC,MAAM,SAAAC,GACLJ,EAAKC,SAAS,CAAErB,QAAQ,MAG5BoB,EAAKC,SAAS,CAAErB,QAAQ,OAI5ByB,gBAAkB,SAAAD,GAChBJ,EAAKlB,GAAGwB,QAAQD,qBAwClBE,YAAc,WACZP,EAAKC,SAAS,CAAEtB,QAAQ,OAG1B6B,YAAc,SAAAJ,GACZJ,EAAKC,SAAS,CAAEpB,OAAQuB,EAAEK,OAAOC,WAGnCC,YAAc,SAAAP,GACZJ,EAAKf,WAAW,YAAce,EAAKvB,MAAMI,iFAvCzC,OACE+B,EAAAC,EAAAC,cAACzC,EAAD,KACEuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACGE,KAAKvC,MAAMG,OACRqC,KAAKC,UAAUF,KAAKvC,MAAMG,OAAQ,KAAM,GACxC,yBAGRgC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,YAAY,aAAaC,SAAUL,KAAKR,cAC/CI,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAASP,KAAKL,aAAtB,UAEFC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,IAAKT,KAAKlC,GACVJ,MAAOsC,KAAKvC,MAAMC,MAClBgD,MAzBa,CACnBC,MAAO,MACPC,SAAU,QACVC,OAAQ,UAuBFC,QAASd,KAAKT,YACdwB,OAAQf,KAAK/B,WACb+C,WAAYhB,KAAKvC,MAAME,SAEzBiC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAASP,KAAKX,iBAAtB,4BAvEgBtB,IAAMkD,eA0FjBzD","file":"static/js/23.67bfc084.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'react-emotion'\nimport { Button, Input } from 'antd'\nimport QrReader from 'react-qr-reader'\nimport { navigate } from '@reach/router'\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  > div {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  .result pre {\n    font-size: 16px;\n    color: #111;\n    text-align: left;\n  }\n`\n\nclass PartnerScan extends React.PureComponent {\n  state = {\n    delay: 300,\n    legacy: false,\n    result: false,\n    manual: ''\n  }\n\n  qr = React.createRef()\n\n  handleScan = code => {\n    if (code && code.startsWith('chomok://')) {\n      fetch('/api/codes/' + code.replace('chomok://', ''), {\n        method: 'POST',\n        credentials: 'include'\n      })\n        .then(r => {\n          if (r.status === 403 || r.status === 401) {\n            navigate('/login')\n            throw new Error('Unauthorized')\n          }\n          return r.json()\n        })\n        .then(res => {\n          if (res.ok) {\n            this.setState({ result: res.data })\n          } else throw new Error('Invalid code')\n        })\n        .catch(e => {\n          this.setState({ result: false })\n        })\n    } else {\n      this.setState({ result: false })\n    }\n  }\n\n  openImageDialog = e => {\n    this.qr.current.openImageDialog()\n  }\n\n  render () {\n    const previewStyle = {\n      width: '90%',\n      maxWidth: '480px',\n      margin: '0 auto'\n    }\n\n    return (\n      <Container>\n        <div className='result'>\n          <h3>Result:</h3>\n          <pre>\n            {this.state.result\n              ? JSON.stringify(this.state.result, null, 4)\n              : 'No valid QR found...'}\n          </pre>\n        </div>\n        <div>\n          <h3>Manual Entry</h3>\n          <Input placeholder='Offer code' onChange={this.manualInput} />\n          <Button onClick={this.checkManual}>Check</Button>\n        </div>\n        <div>\n          <QrReader\n            ref={this.qr}\n            delay={this.state.delay}\n            style={previewStyle}\n            onError={this.handleError}\n            onScan={this.handleScan}\n            legacyMode={this.state.legacy}\n          />\n          <Button onClick={this.openImageDialog}>Submit Image QR</Button>\n        </div>\n      </Container>\n    )\n  }\n\n  handleError = () => {\n    this.setState({ legacy: true })\n  }\n\n  manualInput = e => {\n    this.setState({ manual: e.target.value })\n  }\n\n  checkManual = e => {\n    this.handleScan('chomok://' + this.state.manual)\n  }\n}\n\nexport default PartnerScan\n"],"sourceRoot":""}