{"version":3,"sources":["pages/_partner/Scan.js"],"names":["Container","styled","_templateObject","PartnerScan","state","manual","handleScan","_callee","code","qrcode","r","res","_ldata_my_projects_chomok_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","result","abrupt","replace","fetch","concat","method","credentials","sent","status","navigate","Error","json","ok","data","Modal","info","title","content","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","Fragment","value","perc","special","bulk","offertype","validity","onOk","_","window","location","reload","t0","console","error","stop","this","manualInput","e","_this","setState","target","checkManual","size","Math","min","innerWidth","className","antd__WEBPACK_IMPORTED_MODULE_12__","placeholder","onChange","antd__WEBPACK_IMPORTED_MODULE_13__","onClick","_sensorfactdev_qr_code_scanner__WEBPACK_IMPORTED_MODULE_14___default","onQrCodeScanned","width","height","showAimAssist","React","PureComponent"],"mappings":"ugBAMA,IAAMA,EAAYC,YAAO,MAAPA,CAAHC,SAiCTC,6MACJC,MAAQ,CACNC,OAAQ,MAGVC,iDAAa,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAEJR,GAASA,EAAKU,OAFV,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAGHV,EAASD,EAAKU,OAAOE,QAAQ,YAAa,IAHvCL,EAAAE,KAAA,EAIOI,MAAK,cAAAC,OAAeb,GAAU,CAC5Cc,OAAQ,OACRC,YAAa,YANN,UAQQ,OAJXd,EAJGK,EAAAU,MAQHC,QAA+B,MAAbhB,EAAEgB,OARjB,CAAAX,EAAAE,KAAA,eASPU,YAAS,UACH,IAAIC,MAAM,gBAVT,eAAAb,EAAAE,KAAA,GAYSP,EAAEmB,OAZX,aAYHlB,EAZGI,EAAAU,MAaDK,GAbC,CAAAf,EAAAE,KAAA,SAxBEc,EAqCQpB,EAAIoB,KA/B3BC,IAAMC,KAAK,CACTC,MAAO,oBACPC,QACEC,EAAAvB,EAAAwB,cAAAD,EAAAvB,EAAAyB,SAAA,KACEF,EAAAvB,EAAAwB,cAAA,oBAAYN,EAAKQ,OACjBH,EAAAvB,EAAAwB,cAAA,mBAVO,CACXG,KAAM,iBACNC,QAAS,gBACTC,KAAM,iBAOcX,EAAKY,YACrBP,EAAAvB,EAAAwB,cAAA,uBAAeN,EAAKa,WAGxBC,KAAM,SAAAC,GAAC,OAAIC,OAAOC,SAASC,YAShBlC,EAAAE,KAAA,uBAcE,IAAIW,MAAM,gBAdZ,QAAAb,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmC,GAAAnC,EAAA,SAgBToC,QAAQC,MAARrC,EAAAmC,IAhBS,yBAAAnC,EAAAsC,OAxBf,IAAiBtB,GAwBFxB,EAAA+C,KAAA,qEA6CbC,YAAc,SAAAC,GAAC,OAAIC,EAAKC,SAAS,CAAErD,OAAQmD,EAAEG,OAAOpB,WAEpDqB,YAAc,SAAAJ,GAAC,OAAIC,EAAKnD,WAAWmD,EAAKrD,MAAMC,iFA1B5C,IAAMwD,EAAOC,KAAKC,IAAI,IAA0B,IAApBhB,OAAOiB,WAAqB,GAExD,OACE5B,EAAAvB,EAAAwB,cAACrC,EAAD,KACEoC,EAAAvB,EAAAwB,cAAA,OAAK4B,UAAU,UACb7B,EAAAvB,EAAAwB,cAAA,oCAEFD,EAAAvB,EAAAwB,cAAA,WACED,EAAAvB,EAAAwB,cAAA,0BACAD,EAAAvB,EAAAwB,cAAC6B,EAAA,EAAD,CAAOC,YAAY,aAAaC,SAAUd,KAAKC,cAC/CnB,EAAAvB,EAAAwB,cAACgC,EAAA,EAAD,CAAQC,QAAShB,KAAKM,aAAtB,UAEFxB,EAAAvB,EAAAwB,cAAA,WACED,EAAAvB,EAAAwB,cAACkC,EAAA1D,EAAD,CACE2D,gBAAiBlB,KAAKhD,WACtBmE,MAAOZ,EACPa,OAAQb,EACRc,eAAe,aA3CDC,IAAMC,eAuDjB1E","file":"static/js/25.2d5f3d45.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'react-emotion'\nimport { navigate } from '@reach/router'\nimport { Button, Input, Modal } from 'antd'\nimport QrCodeScanner from '@sensorfactdev/qr-code-scanner'\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  > div {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  .result pre {\n    font-size: 16px;\n    color: #111;\n    text-align: left;\n  }\n`\n\nfunction showQR (data) {\n  const dict = {\n    perc: 'Percentage Off',\n    special: 'Special Offer',\n    bulk: 'Bulk Discount'\n  }\n  Modal.info({\n    title: 'Valid code found!',\n    content: (\n      <>\n        <h1>Value: {data.value}</h1>\n        <h3>Type: {dict[data.offertype]}</h3>\n        <h3>Validity: {data.validity}</h3>\n      </>\n    ),\n    onOk: _ => window.location.reload()\n  })\n}\n\nclass PartnerScan extends React.PureComponent {\n  state = {\n    manual: ''\n  }\n\n  handleScan = async code => {\n    try {\n      if (!code || !code.result) return\n      const qrcode = code.result.replace('chomok://', '')\n      const r = await fetch(`/api/codes/${qrcode}`, {\n        method: 'POST',\n        credentials: 'include'\n      })\n      if (r.status === 403 || r.status === 401) {\n        navigate('/login')\n        throw new Error('Unauthorized')\n      }\n      const res = await r.json()\n      if (res.ok) showQR(res.data)\n      else throw new Error('Invalid code')\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  render () {\n    const size = Math.min(300, (window.innerWidth * 0.75) | 0)\n\n    return (\n      <Container>\n        <div className='result'>\n          <pre>No valid QR found...</pre>\n        </div>\n        <div>\n          <h3>Manual Entry</h3>\n          <Input placeholder='Offer code' onChange={this.manualInput} />\n          <Button onClick={this.checkManual}>Check</Button>\n        </div>\n        <div>\n          <QrCodeScanner\n            onQrCodeScanned={this.handleScan}\n            width={size}\n            height={size}\n            showAimAssist={false}\n          />\n        </div>\n      </Container>\n    )\n  }\n\n  manualInput = e => this.setState({ manual: e.target.value })\n\n  checkManual = e => this.handleScan(this.state.manual)\n}\n\nexport default PartnerScan\n"],"sourceRoot":""}