{"version":3,"sources":["pages/_admin/Background.js"],"names":["RadioGroup","styled","Radio","Group","_templateObject","UploadLogo","state","choice","undefined","images","beforeUpload","file","isLt3M","size","message","error","selectImage","e","_this","setState","target","value","setBG","fetch","method","credentials","then","r","status","navigate","Error","json","res","success","catch","console","updateList","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onChange","this","map","im","antd__WEBPACK_IMPORTED_MODULE_9__","id","key","antd__WEBPACK_IMPORTED_MODULE_11__","src","link","shape","antd__WEBPACK_IMPORTED_MODULE_12__","type","onClick","antd__WEBPACK_IMPORTED_MODULE_13__","name","listType","accept","action","withCredentials","antd__WEBPACK_IMPORTED_MODULE_14__","className","React","PureComponent"],"mappings":"kcAKA,IAAMA,EAAaC,YAAOC,IAAMC,MAAbF,CAAHG,KAcVC,6MACJC,MAAQ,CACNC,YAAQC,EACRC,OAAQ,MAqCVC,aAAe,SAAAC,GACb,IAAMC,EAASD,EAAKE,KAAO,KAAO,KAAO,EAEzC,OADKD,GAAQE,IAAQC,MAAM,kCACpBH,KAGTI,YAAc,SAAAC,GACZC,EAAKC,SAAS,CAAEZ,OAAQU,EAAEG,OAAOC,WAGnCC,MAAQ,SAAAL,GACN,IAAKC,EAAKZ,MAAMC,OAAQ,OAAO,EAC/BgB,MAAM,cAAgBL,EAAKZ,MAAMC,OAAQ,CACvCiB,OAAQ,OACRC,YAAa,YAEZC,KAAK,SAAAC,GACJ,GAAiB,MAAbA,EAAEC,OAEJ,MADAC,YAAS,UACH,IAAIC,MAAM,gBAElB,GAAiB,MAAbH,EAAEC,OAAgB,MAAMD,EAC5B,OAAOA,EAAEI,SAEVL,KAAK,SAAAM,GACJlB,IAAQmB,QAAQ,yCAEjBC,MAAM,SAAAjB,GACLkB,QAAQpB,MAAME,QAIpBmB,WAAa,SAAAnB,GACXM,MAAM,iBAAkB,CACtBE,YAAa,YAEZC,KAAK,SAAAC,GACJ,GAAiB,MAAbA,EAAEC,OAEJ,MADAC,YAAS,UACH,IAAIC,MAAM,gBAElB,OAAOH,EAAEI,SAEVL,KAAK,SAAAjB,GACJS,EAAKC,SAAS,CAAEV,sFA7EpB,OACE4B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACvC,EAAD,CAAYwC,SAAUC,KAAKzB,aACxByB,KAAKnC,MAAMG,OAAOiC,IAAI,SAAAC,GAAE,OACvBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOvB,MAAOsB,EAAGE,GAAIC,IAAKH,EAAGE,IAC3BR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,IAAKL,EAAGM,KAAMpC,KAAK,QAAQqC,MAAM,eAI/Cb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAASZ,KAAKnB,OAArC,sBAIFe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,KAAK,OACLC,SAAS,eACTC,OAAO,UACPC,OAAO,aACPC,iBAAe,EACfjD,aAAc+B,KAAK/B,aACnB8B,SAAUC,KAAKL,YACfC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMR,KAAK,SACXf,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,mBAAf,yDAwDRpB,KAAKL,oBAzFgB0B,IAAMC,eA6FhB1D","file":"static/js/20.d3cb08ea.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'react-emotion'\nimport { navigate } from '@reach/router'\nimport { Avatar, Button, Upload, Radio, Icon, message } from 'antd'\n\nconst RadioGroup = styled(Radio.Group)`\n  display: block;\n  margin: 15px auto;\n\n  img {\n    line-height: 128px;\n  }\n\n  .ant-avatar {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nclass UploadLogo extends React.PureComponent {\n  state = {\n    choice: undefined,\n    images: []\n  }\n\n  render () {\n    return (\n      <div>\n        <div>\n          <h3>Select a background</h3>\n          <RadioGroup onChange={this.selectImage}>\n            {this.state.images.map(im => (\n              <Radio value={im.id} key={im.id}>\n                <Avatar src={im.link} size='large' shape='square' />\n              </Radio>\n            ))}\n          </RadioGroup>\n          <Button type='primary' onClick={this.setBG}>\n            Set as Background\n          </Button>\n        </div>\n        <div>\n          <h3>Upload a new background</h3>\n          <Upload\n            name='file'\n            listType='picture-card'\n            accept='image/*'\n            action='/images/bg'\n            withCredentials\n            beforeUpload={this.beforeUpload}\n            onChange={this.updateList}>\n            <Icon type='plus' />\n            <div className='ant-upload-text'>Upload</div>\n          </Upload>\n        </div>\n      </div>\n    )\n  }\n\n  beforeUpload = file => {\n    const isLt3M = file.size / 1024 / 1024 < 3\n    if (!isLt3M) message.error('Image must smaller than 2.5MB!')\n    return isLt3M\n  }\n\n  selectImage = e => {\n    this.setState({ choice: e.target.value })\n  }\n\n  setBG = e => {\n    if (!this.state.choice) return false\n    fetch('/images/bg/' + this.state.choice, {\n      method: 'POST',\n      credentials: 'include'\n    })\n      .then(r => {\n        if (r.status === 401) {\n          navigate('/login')\n          throw new Error('Unauthorized')\n        }\n        if (r.status !== 200) throw r\n        return r.json()\n      })\n      .then(res => {\n        message.success('The background was successfully set')\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }\n\n  updateList = e => {\n    fetch('/images/bg/all', {\n      credentials: 'include'\n    })\n      .then(r => {\n        if (r.status === 401) {\n          navigate('/login')\n          throw new Error('Unauthorized')\n        }\n        return r.json()\n      })\n      .then(images => {\n        this.setState({ images })\n      })\n  }\n\n  componentDidMount () {\n    this.updateList()\n  }\n}\n\nexport default UploadLogo\n"],"sourceRoot":""}