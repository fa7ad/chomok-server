{"version":3,"sources":["pages/_partner/Scan.js"],"names":["PartnerScan","state","delay","correct","legacyMode","percentage","qr","React","createRef","handleScan","code","startsWith","fetch","replace","method","credentials","then","r","status","navigate","json","res","ok","Error","_this","setState","data","catch","e","handleError","openImageDialog","current","handleUpload","console","log","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","react_qr_reader__WEBPACK_IMPORTED_MODULE_6___default","ref","this","style","width","margin","onError","onScan","onImageLoad","antd__WEBPACK_IMPORTED_MODULE_5__","onClick","color","PureComponent"],"mappings":"gMAKMA,6MACJC,MAAQ,CACNC,MAAO,IACPC,SAAS,EACTC,YAAY,EACZC,WAAY,QAGdC,GAAKC,IAAMC,cAEXC,WAAa,SAAAC,GACPA,GAAQA,EAAKC,WAAW,cAC1BC,MAAM,cAAgBF,EAAKG,QAAQ,YAAa,IAAK,CACnDC,OAAQ,OACRC,YAAa,YAEZC,KAAK,SAAAC,GACJ,OAAiB,MAAbA,EAAEC,OAAuBC,YAAS,UAC/BF,EAAEG,SAEVJ,KAAK,SAAAK,GACJ,IAAIA,EAAIC,GAKD,MAAM,IAAIC,MAAM,WAJrBC,EAAKC,SAAS,CACZtB,SAAS,EACTE,WAAYgB,EAAIK,KAAKrB,WAAa,SAIvCsB,MAAM,SAAAC,GACLJ,EAAKC,SAAS,CAAEtB,SAAS,SAIjC0B,YAAc,SAAAD,GACZJ,EAAKC,SAAS,CAAErB,YAAY,OAE9B0B,gBAAkB,SAAAF,GAChBJ,EAAKlB,GAAGyB,QAAQD,qBA4BlBE,aAAe,SAAAJ,GACbK,QAAQC,IAAIN,4EApBZ,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,IAAKC,KAAKlC,GACVJ,MAAOsC,KAAKvC,MAAMC,MAClBuC,MAVe,CACnBC,MAAO,MACPC,OAAQ,UASJC,QAASJ,KAAKX,YACdgB,OAAQL,KAAK/B,WACbL,WAAYoC,KAAKvC,MAAMG,WACvB0C,YAAaN,KAAKR,eAEpBG,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,QAASR,KAAKV,iBAAtB,aACAK,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEQ,MAAOT,KAAKvC,MAAME,QAAU,QAAU,UAChDqC,KAAKvC,MAAMI,oBA3DI6C,iBAsEXlD","file":"static/js/19.f52ca3d3.chunk.js","sourcesContent":["import { Button } from 'antd'\nimport QrReader from 'react-qr-reader'\nimport { navigate } from '@reach/router'\nimport React, { PureComponent } from 'react'\n\nclass PartnerScan extends PureComponent {\n  state = {\n    delay: 300,\n    correct: false,\n    legacyMode: false,\n    percentage: null\n  }\n\n  qr = React.createRef()\n\n  handleScan = code => {\n    if (code && code.startsWith('chomok://')) {\n      fetch('/api/codes/' + code.replace('chomok://', ''), {\n        method: 'POST',\n        credentials: 'include'\n      })\n        .then(r => {\n          if (r.status === 401) return navigate('/login')\n          return r.json()\n        })\n        .then(res => {\n          if (res.ok) {\n            this.setState({\n              correct: true,\n              percentage: res.data.percentage + ' %'\n            })\n          } else throw new Error('Invalid')\n        })\n        .catch(e => {\n          this.setState({ correct: false })\n        })\n    }\n  }\n  handleError = e => {\n    this.setState({ legacyMode: true })\n  }\n  openImageDialog = e => {\n    this.qr.current.openImageDialog()\n  }\n\n  render () {\n    const previewStyle = {\n      width: '50%',\n      margin: '0 auto'\n    }\n\n    return (\n      <div>\n        <QrReader\n          ref={this.qr}\n          delay={this.state.delay}\n          style={previewStyle}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          legacyMode={this.state.legacyMode}\n          onImageLoad={this.handleUpload}\n        />\n        <Button onClick={this.openImageDialog}>Submit QR</Button>\n        <h1 style={{ color: this.state.correct ? 'green' : 'black' }}>\n          {this.state.percentage}\n        </h1>\n      </div>\n    )\n  }\n\n  handleUpload = e => {\n    console.log(e)\n  }\n}\n\nexport default PartnerScan\n"],"sourceRoot":""}