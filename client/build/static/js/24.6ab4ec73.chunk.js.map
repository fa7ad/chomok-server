{"version":3,"sources":["pages/_partner/Scan.js"],"names":["Container","styled","_templateObject","PartnerScan","state","manual","handleScan","code","result","fetch","concat","replace","method","credentials","then","r","status","navigate","Error","json","res","ok","data","Modal","info","title","content","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","value","perc","special","bulk","offertype","validity","onOk","_","window","location","reload","catch","e","console","error","manualInput","_this","setState","target","checkManual","size","Math","min","innerWidth","className","antd__WEBPACK_IMPORTED_MODULE_10__","placeholder","onChange","this","antd__WEBPACK_IMPORTED_MODULE_11__","onClick","_sensorfactdev_qr_code_scanner__WEBPACK_IMPORTED_MODULE_12___default","onQrCodeScanned","width","height","showAimAssist","React","PureComponent"],"mappings":"4eAMA,IAAMA,EAAYC,YAAO,MAAPA,CAAHC,SAiCTC,6MACJC,MAAQ,CACNC,OAAQ,MAGVC,WAAa,SAAAC,GACPA,EAAKC,QACPC,MAAK,cAAAC,OAAeH,EAAKC,OAAOG,QAAQ,YAAa,KAAO,CAC1DC,OAAQ,OACRC,YAAa,YAEZC,KAAK,SAAAC,GACJ,GAAiB,MAAbA,EAAEC,QAA+B,MAAbD,EAAEC,OAExB,MADAC,YAAS,UACH,IAAIC,MAAM,gBAElB,OAAOH,EAAEI,SAEVL,KAAK,SAAAM,GACJ,IAAIA,EAAIC,GAED,MAAM,IAAIH,MAAM,gBAxCjC,IAAiBI,IAuCEF,EAAIE,KAjCrBC,IAAMC,KAAK,CACTC,MAAO,oBACPC,QACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,oBAAYP,EAAKS,OACjBJ,EAAAC,EAAAC,cAAA,mBAVO,CACXG,KAAM,iBACNC,QAAS,gBACTC,KAAM,iBAOcZ,EAAKa,YACrBR,EAAAC,EAAAC,cAAA,uBAAeP,EAAKc,WAGxBC,KAAM,SAAAC,GAAC,OAAIC,OAAOC,SAASC,cA2BtBC,MAAM,SAAAC,GACLC,QAAQC,MAAMF,QAmCtBG,YAAc,SAAAH,GACZI,EAAKC,SAAS,CAAE3C,OAAQsC,EAAEM,OAAOlB,WAGnCmB,YAAc,SAAAP,GACZI,EAAKzC,WAAWyC,EAAK3C,MAAMC,iFA7B3B,IAAM8C,EAAOC,KAAKC,IAAI,IAA0B,IAApBd,OAAOe,WAAqB,GAExD,OACE3B,EAAAC,EAAAC,cAAC7B,EAAD,KACE2B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,UACb5B,EAAAC,EAAAC,cAAA,oCAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,YAAY,aAAaC,SAAUC,KAAKb,cAC/CnB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,QAASF,KAAKT,aAAtB,UAEFvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,gBAAiBJ,KAAKrD,WACtB0D,MAAOb,EACPc,OAAQd,EACRe,eAAe,aApDDC,IAAMC,eAoEjBjE","file":"static/js/24.6ab4ec73.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'react-emotion'\nimport { navigate } from '@reach/router'\nimport { Button, Input, Modal } from 'antd'\nimport QrCodeScanner from '@sensorfactdev/qr-code-scanner'\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  > div {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  .result pre {\n    font-size: 16px;\n    color: #111;\n    text-align: left;\n  }\n`\n\nfunction showQR (data) {\n  const dict = {\n    perc: 'Percentage Off',\n    special: 'Special Offer',\n    bulk: 'Bulk Discount'\n  }\n  Modal.info({\n    title: 'Valid code found!',\n    content: (\n      <>\n        <h1>Value: {data.value}</h1>\n        <h3>Type: {dict[data.offertype]}</h3>\n        <h3>Validity: {data.validity}</h3>\n      </>\n    ),\n    onOk: _ => window.location.reload()\n  })\n}\n\nclass PartnerScan extends React.PureComponent {\n  state = {\n    manual: ''\n  }\n\n  handleScan = code => {\n    if (code.result) {\n      fetch(`/api/codes/${code.result.replace('chomok://', '')}`, {\n        method: 'POST',\n        credentials: 'include'\n      })\n        .then(r => {\n          if (r.status === 403 || r.status === 401) {\n            navigate('/login')\n            throw new Error('Unauthorized')\n          }\n          return r.json()\n        })\n        .then(res => {\n          if (res.ok) {\n            showQR(res.data)\n          } else throw new Error('Invalid code')\n        })\n        .catch(e => {\n          console.error(e)\n        })\n    }\n  }\n\n  render () {\n    // const previewStyle = {\n    //   width: '90%',\n    //   maxWidth: '480px',\n    //   margin: '0 auto'\n    // }\n    const size = Math.min(300, (window.innerWidth * 0.75) | 0)\n\n    return (\n      <Container>\n        <div className='result'>\n          <pre>No valid QR found...</pre>\n        </div>\n        <div>\n          <h3>Manual Entry</h3>\n          <Input placeholder='Offer code' onChange={this.manualInput} />\n          <Button onClick={this.checkManual}>Check</Button>\n        </div>\n        <div>\n          <QrCodeScanner\n            onQrCodeScanned={this.handleScan}\n            width={size}\n            height={size}\n            showAimAssist={false}\n          />\n        </div>\n      </Container>\n    )\n  }\n\n  manualInput = e => {\n    this.setState({ manual: e.target.value })\n  }\n\n  checkManual = e => {\n    this.handleScan(this.state.manual)\n  }\n}\n\nexport default PartnerScan\n"],"sourceRoot":""}