{"version":3,"sources":["../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/adjust.js","../node_modules/ramda/es/internal/_isArray.js","../node_modules/ramda/es/internal/_isTransformer.js","../node_modules/ramda/es/internal/_dispatchable.js","../node_modules/ramda/es/internal/_xfBase.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_isString.js","../node_modules/ramda/es/internal/_isArrayLike.js","../node_modules/ramda/es/internal/_xwrap.js","../node_modules/ramda/es/bind.js","../node_modules/ramda/es/internal/_reduce.js","../node_modules/ramda/es/internal/_xmap.js","../node_modules/ramda/es/internal/_has.js","../node_modules/ramda/es/internal/_isArguments.js","../node_modules/ramda/es/keys.js","../node_modules/ramda/es/map.js","../node_modules/ramda/es/path.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/internal/_xaperture.js","../node_modules/ramda/es/values.js","../node_modules/ramda/es/assoc.js","../node_modules/ramda/es/internal/_isInteger.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_containsWith.js","../node_modules/ramda/es/identical.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_contains.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/internal/_filter.js","../node_modules/ramda/es/internal/_isObject.js","../node_modules/ramda/es/internal/_xfilter.js","../node_modules/ramda/es/filter.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/remove.js","../node_modules/ramda/es/update.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/internal/_assign.js","../node_modules/ramda/es/internal/_objectAssign.js","../node_modules/ramda/es/objOf.js","../node_modules/ramda/es/internal/_stepCat.js","../node_modules/ramda/es/into.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/lens.js","../node_modules/ramda/es/lensProp.js","../node_modules/ramda/es/merge.js","../node_modules/ramda/es/of.js","../node_modules/ramda/es/over.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/times.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/set.js","../node_modules/ramda/es/test.js","../node_modules/ramda/es/toLower.js","../node_modules/ramda/es/toUpper.js","../node_modules/ramda/es/trim.js","../node_modules/ramda/es/index.js"],"names":["_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","this","es_always","val","_curry2","f2","b","_b","_a","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combined","argsIdx","left","combinedIdx","es_curryN","_curry3","f3","c","_c","es_adjust","list","_idx","_list","_isArray","Array","isArray","Object","prototype","toString","call","_isTransformer","obj","_dispatchable","methodNames","xf","args","slice","pop","transducer","_xfBase","init","_result","_map","functor","len","_isString","x","internal_isArrayLike","nodeType","hasOwnProperty","XWrap","f","acc","_xwrap","es_bind","thisObj","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","_arrayReduce","reduce","TypeError","_xmap_XMap","XMap","input","internal_xmap","_has","prop","_isArguments_toString","internal_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","es_keys","keys","nIdx","ks","checkArgsLength","es_map","key","es_path","paths","es_prop","p","es_values","props","vals","es_assoc","Number","isInteger","_isFunction","es_type","undefined","_arrayFromIterator","push","_containsWith","pred","es_identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","match","String","_functionName","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","es_equals","_indexOf","inf","indexOf","_contains","_quote","s","replace","pad","internal_toISOString","Date","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter_XFilter","XFilter","es_filter","filterable","es_reject","es_toString","_toString","seen","recur","y","xs","mapPairs","k","sort","join","test","isNaN","NaN","repr","es_remove","start","count","splice","es_update","_identity","_assign","assign","target","output","nextKey","es_objOf","es_invoker","arity","method","es_lens","getter","setter","toFunctorFn","focus","es_lensProp","es_merge","l","r","es_over","lens","Identity","map","es_times","RangeError","es_repeat","es_set","v","es_toLower","es_toUpper","ws","trim","__webpack_require__","__webpack_exports__"],"mappings":"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","file":"static/js/1.1ab90960.chunk.js","sourcesContent":["export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\nvar toString = Object.prototype.toString;\n\nvar _isArguments = function _isArguments() {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments'; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n};\n\nvar keys =\n/*#__PURE__*/\n_curry1(_keys);\n\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","import _curry2 from './internal/_curry2';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry3 from './internal/_curry3';\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry1 from './internal/_curry1';\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","import _curry2 from './internal/_curry2';\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import equals from '../equals';\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from './_indexOf';\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function mapPairs(obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry3 from './internal/_curry3';\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n\nexport default update;","export default function _identity(x) {\n  return x;\n}","import _objectAssign from './_objectAssign';\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _has from './_has'; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}","import _curry2 from './internal/_curry2';\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function transducerStep(xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function transducerStep(a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function transducerStep(result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n\nexport default merge;","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","import _curry3 from './internal/_curry3'; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function Identity(x) {\n  return {\n    value: x,\n    map: function map(f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import _curry2 from './internal/_curry2';\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","import invoker from './invoker';\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import invoker from './invoker';\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _curry1 from './internal/_curry1';\nvar ws = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" + \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" + \"\\u2029\\uFEFF\";\nvar zeroWidth = \"\\u200B\";\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar _trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\n\nvar trim =\n/*#__PURE__*/\n_curry1(_trim);\n\nexport default trim;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';"],"sourceRoot":""}